local_resource(
  name = 'dev:efs-submission-web-build',
  cmd = 'mvn compile',
  deps = ['src/main']
)

custom_build(
    '169942020521.dkr.ecr.eu-west-1.amazonaws.com/local/efs-submission-api',
    'mvn -s settings.xml compile jib:dockerBuild -Dimage=$EXPECTED_REF',
    live_update = [
            sync(
              local_path = './target/classes/uk',
              remote_path = '/app/classes/uk'
            ),
            sync(
                local_path = './target/classes/META-INF',
                remote_path = '/app/classes/META-INF'
            ),
            sync(
                 local_path = './target/classes/*.properties',
                 remote_path = '/app/resources'
            ),

            restart_container()
        ],
    deps = ['./target/classes'],
    ignore=[
        '*.json'
    ]
)

local_resource(
  name = 'efs:mongo_populate',
  resource_deps = [
    'mongo',
    'mongo:populate-database'
  ],
  cmd = '''
    root=$(basename "$(cd ../..|| exit; pwd)")
    container_name="${root}_mongo_1"

    json_files=(src/main/resources/*.json)
    db="efs-submissions"
    for file in ${json_files[@]}; do
        collection_name=$(basename $file .json)
        echo "Updating collection $collection_name"

        $(docker exec $container_name mongo ${database} --quiet --eval "db.${collection_name}.drop()")
        docker exec $container_name echo $(cat $file) | mongoimport --quiet --mode=upsert --jsonArray --db=${database} --collection=${collection_name} --file=/dev/stdin
    done
  ''',
  deps = [
    'src/main/resources'
  ],
  ignore = [
    '!*.json'
  ]
)